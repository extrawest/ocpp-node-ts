/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type ComponentCriterionEnumType = "Active" | "Available" | "Enabled" | "Problem";
export interface UrnOCPPCp220203GetReportRequest {
    customData?: CustomDataType;
    /**
     * @minItems 1
     */
    componentVariable?: [ComponentVariableType, ...ComponentVariableType[]];
    /**
     * The Id of the request.
     *
     */
    requestId: number;
    /**
     * This field contains criteria for components for which a report is requested
     *
     *
     * @minItems 1
     * @maxItems 4
     */
    componentCriteria?: [ComponentCriterionEnumType] | [ComponentCriterionEnumType, ComponentCriterionEnumType] | [ComponentCriterionEnumType, ComponentCriterionEnumType, ComponentCriterionEnumType] | [ComponentCriterionEnumType, ComponentCriterionEnumType, ComponentCriterionEnumType, ComponentCriterionEnumType];
}
/**
 * This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.
 */
export interface CustomDataType {
    vendorId: string;
    [k: string]: unknown;
}
/**
 * Class to report components, variables and variable attributes and characteristics.
 *
 */
export interface ComponentVariableType {
    customData?: CustomDataType;
    component: ComponentType;
    variable?: VariableType;
}
/**
 * A physical or logical component
 *
 */
export interface ComponentType {
    customData?: CustomDataType;
    evse?: EVSEType;
    /**
     * Name of the component. Name should be taken from the list of standardized component names whenever possible. Case Insensitive. strongly advised to use Camel Case.
     *
     */
    name: string;
    /**
     * Name of instance in case the component exists as multiple instances. Case Insensitive. strongly advised to use Camel Case.
     *
     */
    instance?: string;
}
/**
 * EVSE
 * urn:x-oca:ocpp:uid:2:233123
 * Electric Vehicle Supply Equipment
 *
 */
export interface EVSEType {
    customData?: CustomDataType;
    /**
     * Identified_ Object. MRID. Numeric_ Identifier
     * urn:x-enexis:ecdm:uid:1:569198
     * EVSE Identifier. This contains a number (&gt; 0) designating an EVSE of the Charging Station.
     *
     */
    id: number;
    /**
     * An id to designate a specific connector (on an EVSE) by connector index number.
     *
     */
    connectorId?: number;
}
/**
 * Reference key to a component-variable.
 *
 */
export interface VariableType {
    customData?: CustomDataType;
    /**
     * Name of the variable. Name should be taken from the list of standardized variable names whenever possible. Case Insensitive. strongly advised to use Camel Case.
     *
     */
    name: string;
    /**
     * Name of instance in case the variable exists as multiple instances. Case Insensitive. strongly advised to use Camel Case.
     *
     */
    instance?: string;
}
